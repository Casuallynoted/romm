"""empty message

Revision ID: 0015_rom_filesize
Revises: 0014_asset_files
Create Date: 2024-01-16 10:28:15.812026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = "0015_rom_filesize"
down_revision = "0014_asset_files"
branch_labels = None
depends_on = None

SIZE_UNIT_TO_BYTES = {
    "B": 1,
    "KB": 1024,
    "MB": 1024**2,
    "GB": 1024**3,
    "TB": 1024**4,
    "PB": 1024**5,
}


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("roms", schema=None) as batch_op:
        batch_op.add_column(sa.Column("file_size_bytes", sa.Integer(), nullable=False))
    # ### end Alembic commands ###

    connection = op.get_bind()
    result = connection.execute(text("SELECT id, file_size, file_size_units FROM roms"))

    # Process the data and prepare for bulk update
    updates = []
    for row in result:
        file_size_bytes = int(row[1] * SIZE_UNIT_TO_BYTES.get(row[2], 1))
        updates.append({"id": row[0], "file_size_bytes": file_size_bytes})

    if not updates:
        return

    # Perform bulk update
    connection.execute(
        text("UPDATE roms SET file_size_bytes = :file_size_bytes WHERE id = :id"),
        updates,
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("roms", schema=None) as batch_op:
        batch_op.drop_column("file_size_bytes")
    # ### end Alembic commands ###
